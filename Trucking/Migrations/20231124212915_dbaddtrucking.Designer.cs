// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trucking.Context;

#nullable disable

namespace Trucking.Migrations
{
    [DbContext(typeof(TruckContext))]
    [Migration("20231124212915_dbaddtrucking")]
    partial class dbaddtrucking
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("Trucking.Entities.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Destiny")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<int>("TripStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TruckerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TruckerId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Viaje de ...",
                            Destiny = "CABA, Buenos Aires",
                            Source = "Rosario, Santa Fe",
                            TripStatus = 0,
                            TruckerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Viaje de ...",
                            Destiny = "Bariloche, Rio Negro",
                            Source = "Arroyo Seco, Buenos Aires",
                            TripStatus = 1,
                            TruckerId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Viaje de ...",
                            Destiny = "Carlos Paz, Cordoba",
                            Source = "Rosario, Santa Fe",
                            TripStatus = 2,
                            TruckerId = 2
                        });
                });

            modelBuilder.Entity("Trucking.Entities.Trucker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompleteName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TruckerType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Truckers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompleteName = "Juan Gomez",
                            TruckerType = "Carga Seca"
                        },
                        new
                        {
                            Id = 2,
                            CompleteName = "Martin Suarez",
                            TruckerType = "Autos"
                        },
                        new
                        {
                            Id = 3,
                            CompleteName = "Agustin Ramirez",
                            TruckerType = "Ganaderia"
                        });
                });

            modelBuilder.Entity("Trucking.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gabriel",
                            Password = "1234",
                            UserName = "gabriel"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fernando",
                            Password = "1234",
                            UserName = "fernando"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sara",
                            Password = "1234",
                            UserName = "sara"
                        });
                });

            modelBuilder.Entity("Trucking.Entities.Trip", b =>
                {
                    b.HasOne("Trucking.Entities.Trucker", "Trucker")
                        .WithMany("Trips")
                        .HasForeignKey("TruckerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trucker");
                });

            modelBuilder.Entity("Trucking.Entities.Trucker", b =>
                {
                    b.Navigation("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
